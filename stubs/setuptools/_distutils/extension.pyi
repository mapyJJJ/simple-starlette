from typing import Any, Optional

class Extension:
    name: Any = ...
    sources: Any = ...
    include_dirs: Any = ...
    define_macros: Any = ...
    undef_macros: Any = ...
    library_dirs: Any = ...
    libraries: Any = ...
    runtime_library_dirs: Any = ...
    extra_objects: Any = ...
    extra_compile_args: Any = ...
    extra_link_args: Any = ...
    export_symbols: Any = ...
    swig_opts: Any = ...
    depends: Any = ...
    language: Any = ...
    optional: Any = ...
    def __init__(self, name: Any, sources: Any, include_dirs: Optional[Any] = ..., define_macros: Optional[Any] = ..., undef_macros: Optional[Any] = ..., library_dirs: Optional[Any] = ..., libraries: Optional[Any] = ..., runtime_library_dirs: Optional[Any] = ..., extra_objects: Optional[Any] = ..., extra_compile_args: Optional[Any] = ..., extra_link_args: Optional[Any] = ..., export_symbols: Optional[Any] = ..., swig_opts: Optional[Any] = ..., depends: Optional[Any] = ..., language: Optional[Any] = ..., optional: Optional[Any] = ..., **kw: Any) -> None: ...

def read_setup_file(filename: Any): ...
