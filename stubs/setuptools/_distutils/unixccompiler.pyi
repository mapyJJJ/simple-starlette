from distutils.ccompiler import CCompiler
from typing import Any, Optional

class UnixCCompiler(CCompiler):
    compiler_type: str = ...
    executables: Any = ...
    src_extensions: Any = ...
    obj_extension: str = ...
    static_lib_extension: str = ...
    shared_lib_extension: str = ...
    dylib_lib_extension: str = ...
    xcode_stub_lib_extension: str = ...
    static_lib_format: str = ...
    shared_lib_format: str = ...
    dylib_lib_format: str = ...
    xcode_stub_lib_format: Any = ...
    def preprocess(self, source: Any, output_file: Optional[Any] = ..., macros: Optional[Any] = ..., include_dirs: Optional[Any] = ..., extra_preargs: Optional[Any] = ..., extra_postargs: Optional[Any] = ...) -> None: ...
    def create_static_lib(self, objects: Any, output_libname: Any, output_dir: Optional[Any] = ..., debug: int = ..., target_lang: Optional[Any] = ...) -> None: ...
    def link(self, target_desc: Any, objects: Any, output_filename: Any, output_dir: Optional[Any] = ..., libraries: Optional[Any] = ..., library_dirs: Optional[Any] = ..., runtime_library_dirs: Optional[Any] = ..., export_symbols: Optional[Any] = ..., debug: int = ..., extra_preargs: Optional[Any] = ..., extra_postargs: Optional[Any] = ..., build_temp: Optional[Any] = ..., target_lang: Optional[Any] = ...) -> None: ...
    def library_dir_option(self, dir: Any): ...
    def runtime_library_dir_option(self, dir: Any): ...
    def library_option(self, lib: Any): ...
    def find_library_file(self, dirs: Any, lib: Any, debug: int = ...): ...
