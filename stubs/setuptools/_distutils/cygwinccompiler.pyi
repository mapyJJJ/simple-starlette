from distutils.unixccompiler import UnixCCompiler
from typing import Any, Optional

def get_msvcr(): ...

class CygwinCCompiler(UnixCCompiler):
    compiler_type: str = ...
    obj_extension: str = ...
    static_lib_extension: str = ...
    shared_lib_extension: str = ...
    static_lib_format: str = ...
    shared_lib_format: str = ...
    exe_extension: str = ...
    cc: Any = ...
    cxx: Any = ...
    linker_dll: Any = ...
    dll_libraries: Any = ...
    def __init__(self, verbose: int = ..., dry_run: int = ..., force: int = ...) -> None: ...
    @property
    def gcc_version(self): ...
    def link(self, target_desc: Any, objects: Any, output_filename: Any, output_dir: Optional[Any] = ..., libraries: Optional[Any] = ..., library_dirs: Optional[Any] = ..., runtime_library_dirs: Optional[Any] = ..., export_symbols: Optional[Any] = ..., debug: int = ..., extra_preargs: Optional[Any] = ..., extra_postargs: Optional[Any] = ..., build_temp: Optional[Any] = ..., target_lang: Optional[Any] = ...) -> None: ...
    def object_filenames(self, source_filenames: Any, strip_dir: int = ..., output_dir: str = ...): ...

class Mingw32CCompiler(CygwinCCompiler):
    compiler_type: str = ...
    dll_libraries: Any = ...
    def __init__(self, verbose: int = ..., dry_run: int = ..., force: int = ...) -> None: ...

CONFIG_H_OK: str
CONFIG_H_NOTOK: str
CONFIG_H_UNCERTAIN: str

def check_config_h(): ...
def is_cygwincc(cc: Any): ...

get_versions: Any
