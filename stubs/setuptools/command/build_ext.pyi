from Cython.Distutils.build_ext import build_ext as _build_ext
from setuptools.extension import Library as Library
from typing import Any, Optional

have_rtld: bool
use_stubs: bool
libtype: str

def if_dl(s: Any): ...
def get_abi3_suffix(): ...

class build_ext(_build_ext):
    inplace: Any = ...
    def run(self) -> None: ...
    def copy_extensions_to_source(self) -> None: ...
    def get_ext_filename(self, fullname: Any): ...
    shlib_compiler: Any = ...
    shlibs: Any = ...
    ext_map: Any = ...
    def initialize_options(self) -> None: ...
    extensions: Any = ...
    def finalize_options(self) -> None: ...
    def setup_shlib_compiler(self) -> None: ...
    def get_export_symbols(self, ext: Any): ...
    compiler: Any = ...
    def build_extension(self, ext: Any) -> None: ...
    def links_to_dynamic(self, ext: Any): ...
    def get_outputs(self): ...
    def write_stub(self, output_dir: Any, ext: Any, compile: bool = ...) -> None: ...

def link_shared_object(self, objects: Any, output_libname: Any, output_dir: Optional[Any] = ..., libraries: Optional[Any] = ..., library_dirs: Optional[Any] = ..., runtime_library_dirs: Optional[Any] = ..., export_symbols: Optional[Any] = ..., debug: int = ..., extra_preargs: Optional[Any] = ..., extra_postargs: Optional[Any] = ..., build_temp: Optional[Any] = ..., target_lang: Optional[Any] = ...) -> None: ...
