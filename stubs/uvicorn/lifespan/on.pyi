from asgiref.typing import LifespanScope as LifespanScope, LifespanShutdownCompleteEvent, LifespanShutdownEvent, LifespanShutdownFailedEvent, LifespanStartupCompleteEvent, LifespanStartupEvent, LifespanStartupFailedEvent
from typing import Any, Union
from uvicorn import Config as Config

LifespanReceiveMessage = Union[LifespanStartupEvent, LifespanShutdownEvent]
LifespanSendMessage = Union[LifespanStartupFailedEvent, LifespanShutdownFailedEvent, LifespanStartupCompleteEvent, LifespanShutdownCompleteEvent]
STATE_TRANSITION_ERROR: str

class LifespanOn:
    config: Any = ...
    logger: Any = ...
    startup_event: Any = ...
    shutdown_event: Any = ...
    receive_queue: Any = ...
    error_occured: bool = ...
    startup_failed: bool = ...
    shutdown_failed: bool = ...
    should_exit: bool = ...
    def __init__(self, config: Config) -> None: ...
    async def startup(self) -> None: ...
    async def shutdown(self) -> None: ...
    asgi: Any = ...
    async def main(self) -> None: ...
    async def send(self, message: LifespanSendMessage) -> None: ...
    async def receive(self) -> LifespanReceiveMessage: ...
