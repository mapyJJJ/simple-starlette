"""
This type stub file was generated by pyright.
"""

from asgiref.typing import ASGIReceiveCallable as ASGIReceiveCallable, ASGIReceiveEvent as ASGIReceiveEvent, ASGISendCallable as ASGISendCallable, HTTPScope as HTTPScope
from typing import Any, Iterable, Optional, Tuple
from uvicorn._types import Environ as Environ, ExcInfo as ExcInfo, StartResponse as StartResponse, WSGIApp as WSGIApp

def build_environ(scope: HTTPScope, message: ASGIReceiveEvent, body: bytes) -> Environ:
    ...

class WSGIMiddleware:
    app: Any = ...
    executor: Any = ...
    def __init__(self, app: WSGIApp, workers: int = ...) -> None:
        ...
    
    async def __call__(self, scope: HTTPScope, receive: ASGIReceiveCallable, send: ASGISendCallable) -> None:
        ...
    


class WSGIResponder:
    app: Any = ...
    executor: Any = ...
    scope: Any = ...
    status: Any = ...
    response_headers: Any = ...
    send_event: Any = ...
    send_queue: Any = ...
    loop: Any = ...
    response_started: bool = ...
    exc_info: Any = ...
    def __init__(self, app: WSGIApp, executor: concurrent.futures.ThreadPoolExecutor, scope: HTTPScope) -> None:
        ...
    
    async def __call__(self, receive: ASGIReceiveCallable, send: ASGISendCallable) -> None:
        ...
    
    async def sender(self, send: ASGISendCallable) -> None:
        ...
    
    def start_response(self, status: str, response_headers: Iterable[Tuple[str, str]], exc_info: Optional[ExcInfo] = ...) -> None:
        ...
    
    def wsgi(self, environ: Environ, start_response: StartResponse) -> None:
        ...
    


