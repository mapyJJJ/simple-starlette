import typing as t
from .user_agent import UserAgent as _BaseUserAgent
from _typeshed.wsgi import WSGIEnvironment as WSGIEnvironment
from typing import Any

class _UserAgentParser:
    platform_rules: t.ClassVar[t.Iterable[t.Tuple[str, str]]] = ...
    browser_rules: t.ClassVar[t.Iterable[t.Tuple[str, str]]] = ...
    platforms: Any = ...
    browsers: Any = ...
    def __init__(self) -> None: ...
    def __call__(self, user_agent: str) -> t.Tuple[t.Optional[str], t.Optional[str], t.Optional[str], t.Optional[str]]: ...

class UserAgentParser(_UserAgentParser):
    def __init__(self) -> None: ...

class _deprecated_property(property):
    message: Any = ...
    def __init__(self, fget: t.Callable[[_UserAgent], t.Any]) -> None: ...
    def __get__(self, *args: t.Any, **kwargs: t.Any) -> t.Any: ...

class _UserAgent(_BaseUserAgent):
    def __init__(self, string: str) -> None: ...
    def platform(self) -> t.Optional[str]: ...
    def browser(self) -> t.Optional[str]: ...
    def version(self) -> t.Optional[str]: ...
    def language(self) -> t.Optional[str]: ...

class UserAgent(_UserAgent):
    def __init__(self, environ_or_string: t.Union[str, WSGIEnvironment]) -> None: ...
