import abc
from typing import Any

class ReversibleProxy: ...

class StartableContext(abc.ABC, metaclass=abc.ABCMeta):
    @abc.abstractmethod
    async def start(self, is_ctxmanager: bool = ...) -> Any: ...
    def __await__(self): ...
    async def __aenter__(self): ...
    @abc.abstractmethod
    async def __aexit__(self, type_: Any, value: Any, traceback: Any) -> Any: ...

class ProxyComparable(ReversibleProxy):
    def __hash__(self) -> Any: ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
